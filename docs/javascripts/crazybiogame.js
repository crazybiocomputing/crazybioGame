(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/core/common.js":
/*!****************************!*\
  !*** ./src/core/common.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n/**\n * Common code for the engine\n *\n *\n */\n \n/* Global Variable */\nlet CRAZYBIOGAME = {\n  name: 'A crazyBioComputing Game',\n  level: 0,\n  game: 0,\n  gamepath: '',\n  topic: 'none',\n  next_game: -1,\n  useItem: false,\n  deferred: {}\n};\n\nconst categories = {\n  \"scene\": {\n    type: \"scene\", \n    code: 1\n  },\n  \"item\": {\n    type: \"item\", \n    code: 2\n  },\n  \"machine\": {\n    type: \"machine\", \n    code: 4\n  },\n  \"machine.download\": {\n    type: \"machine.download\", \n    code: 8\n  },\n  \"machine.lockKeypad\": {\n    type: \"machine.lockKeypad\", \n    code: 16\n  },\n  \"machine.lockDigit[1]\": {\n    type: \"machine.lockDigit[1]\", \n    code: 32\n  },\n  \"machine.lockDigit[2]\": {\n    type: \"machine.lockDigit[2]\", \n    code: 33\n  },\n  \"machine.lockDigit[3]\": {type: \"machine.lockDigit[3]\", code: 34},\n  \"machine.lockDigit[4]\": {type: \"machine.lockDigit[4]\", code: 35},\n  \"machine.lockDigit[5]\": {type: \"machine.lockDigit[5]\", code: 36},\n  \"machine.lockDigit[6]\": {type: \"machine.lockDigit[6]\", code: 37},\n  \"machine.lockDigit[7]\": {type: \"machine.lockDigit[7]\", code: 38},\n  \"machine.lockDigit[8]\": {type: \"machine.lockDigit[8]\", code: 39},\n  \"machine.lockDigit[9]\": {type: \"machine.lockDigit[9]\", code: 40},\n  \"machine.lockText\": {\n    type: \"machine.lockText\", \n    code: 64\n  },\n  \"machine.lockNumerical\": {\n    type: \"machine.lockNumerical\", \n    code: 128\n  },\n  \"machine.form\": {\n    type: \"machine.form\", \n    code: 256\n  },\n  \"machine.formDragDrop\": {type: \"machine.formDragDrop\", code: 257},\n  \"machine.formDropDown\": {type: \"machine.formDropDown\", code: 258},\n  \"target\": {type: \"target\", code: 512},\n  \"sprite\": {type: \"sprite\", code: 1024}\n};\n\nconst NS = 'http://www.w3.org/2000/svg';\n    \n/**\n * Create a SVG Layer for grabbing the event(s)\n * \n * @author Charlotte GONCALVES FRASCO\n */\nconst createBasicSVG = (id,w,h) => {\n  // M a i n\n\n    let svg = document.createElementNS(NS,'svg');\n    // TODO BUG\n    svg.setAttributeNS(null, 'viewBox',`0 0 ${w} ${h}`);\n    svg.setAttributeNS(null, 'class', 'map');\n    svg.setAttributeNS(null,'preserveAspectRatio','xMinYMin meet');\n    \n    return svg;\n}\n\nconst appendImage = (image_path,id, svg) => {\n  let image = document.createElementNS(NS,'image');\n  image.setAttributeNS(null,'width','100%');\n  image.setAttributeNS(null,'height','100%');\n  image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', image_path);\n  svg.appendChild(image);\n  return svg;\n};\n\nconst appendSensitive = (id, geom) => {\n\n  const createCircle = (cx,cy,radius) => {\n    let shape = document.createElementNS(NS,'circle');\n    shape.setAttributeNS(null,'cx',radius);\n    shape.setAttributeNS(null,'cy',radius);\n    shape.setAttributeNS(null,'r',radius);\n    shape.setAttributeNS(null,'opacity', '0.9');\n    shape.setAttributeNS(null, 'fill', '#F0F0F0');\n    return shape;\n  }\n\n  const createRectangle = (x,y,w,h) => {\n    let shape = document.createElementNS(NS,'rect');\n    shape.setAttributeNS(null,'x',0);\n    shape.setAttributeNS(null,'y',0);\n    shape.setAttributeNS(null,'width',w);\n    shape.setAttributeNS(null,'height',h);\n    shape.setAttributeNS(null,'opacity', '0.9');\n    shape.setAttributeNS(null, 'fill', '#F0F0F0');\n    return shape;\n  }\n\n  const createPolygon = (path) => {\n    let shape = document.createElementNS(NS,'path');\n    shape.setAttributeNS(null,'d',path);\n    return shape;\n  }\n  \n  const geometries = {'C': createCircle, 'R': createRectangle, 'P': createPolygon};\n  \n  // Define clickable areas if any\n  let group = document.createElementNS(NS,'g');\n  group.setAttributeNS(null, 'class', 'hover_group');\n  group.setAttributeNS(null, 'opacity', '0');\n  group.setAttributeNS(null, 'id', `area_${id}`);\n\n  let link = document.createElementNS(NS,'a');\n  link.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', 'javascript:void(0)');\n  link.setAttributeNS(null, 'id',`link_${id}`);\n  link.setAttributeNS(null, 'class', 'target');\n  \n  let shape = geometries[geom.type](...geom.data);\n  shape.dataset.objectid = id;\n  link.appendChild(shape);\n\n  group.appendChild(link);\n  return group;\n};\n\n\nconst createSensitiveLayer = (id,w,h,geom) => {\n  const createCircle = (cx,cy,radius) => {\n    let shape = document.createElementNS(NS,'circle');\n    shape.setAttributeNS(null,'cx',cx);\n    shape.setAttributeNS(null,'cy',cy);\n    shape.setAttributeNS(null,'r',radius);\n    shape.setAttributeNS(null,'opacity', '0.9');\n    shape.setAttributeNS(null, 'fill', '#F0F0F0');\n    return shape;\n  }\n\n  const createRectangle = (x,y,w,h) => {\n    let shape = document.createElementNS(NS,'rect');\n    shape.setAttributeNS(null,'x',0);\n    shape.setAttributeNS(null,'y',0);\n    shape.setAttributeNS(null,'width',w);\n    shape.setAttributeNS(null,'height',h);\n    shape.setAttributeNS(null,'opacity', '0.9');\n    shape.setAttributeNS(null, 'fill', '#F0F0F0');\n    return shape;\n  }\n\n  const createPolygon = (path) => {\n    let shape = document.createElementNS(NS,'path');\n    shape.setAttributeNS(null,'d',path);\n    return shape;\n  }\n  \n  const geometries = {'C': createCircle, 'R': createRectangle, 'P': createPolygon};\n  \n  // M a i n\n  const NS = 'http://www.w3.org/2000/svg';\n  \n  let svg = document.createElementNS(NS,'svg');\n  svg.setAttributeNS(null, 'viewBox',`0 0 ${w} ${h}`);\n  svg.setAttributeNS(null, 'class', 'map');\n  svg.setAttributeNS(null,'preserveAspectRatio','xMinYMin meet');\n\n  // Define clickable areas if any\n  svg.appendChild(appendSensitive(id,geom));\n  \n  return svg;\n}\n\n\nconst createHeader = () => {\n  let url = new URL(window.location.href);\n  let id = url.searchParams.get(\"id\");\n  let level = url.searchParams.get(\"level\");\n  let topic = url.searchParams.get(\"topic\");\n  let game = url.searchParams.get(\"game\");\n  let gamepath = url.searchParams.get(\"path\");\n  let next_id = url.searchParams.get(\"next\");\n  // Add Title\n  let title = document.createElement('title');\n  title.textContent = `Game #${game} - Level #${level}`;\n  document.head.prepend(title);\n  // Add banner\n  document.querySelector('#banner').innerHTML = `\n    <ul>\n    <li><a href=\"../index.html\">[ H o m e ]</a></li>\n    <li><a href=\"history.html\">&mdash; c&nbsp;&nbsp;r&nbsp;&nbsp;a&nbsp;&nbsp;z&nbsp;&nbsp;y&nbsp;&nbsp;b&nbsp;&nbsp;i&nbsp;&nbsp;o\n&nbsp;&nbsp;c&nbsp;&nbsp;o&nbsp;&nbsp;m&nbsp;&nbsp;p&nbsp;&nbsp;u&nbsp;&nbsp;t&nbsp;&nbsp;i&nbsp;&nbsp;n&nbsp;&nbsp;g  &mdash;</a></li>\n    <li><a href=\"#\">[ L e v e l # ${level} &mdash; g a m e # ${game} ]</a></li>\n    </ul>`;\n    \n  // Some storage...\n  CRAZYBIOGAME.level = parseInt(level);\n  CRAZYBIOGAME.game = parseInt(game);\n  CRAZYBIOGAME.gamepath = gamepath.toLowerCase();\n  CRAZYBIOGAME.topic = topic.toLowerCase();\n  let mgr = new GameManager();\n  mgr.calcNextURL('../levels.json',level,game);\n}\n\nCRAZYBIOGAME.init = () => {\n  createHeader();\n}\n\nconst nextGameById = (val,node_id) => {\n  let node = CRAZYBIOGAME.graph.nodeList.filter( (node) => node.id === node_id)[0];\n  nextGame(val,node);\n}\n\n\nconst nextGame = (val,node) => {\n  console.log(val,node.exitCode);\n  if (val === node.exitCode.toString()) {\n    // Update crazybiolevels localstorage\n    let crazybiolevels = 2**(CRAZYBIOGAME.game - 1);\n    let str = '';\n    if (localStorage.getItem('crazybiolevels_' + CRAZYBIOGAME.topic)) {\n      let i = (CRAZYBIOGAME.level - 1 ) * 2;\n      let storage = localStorage.getItem('crazybiolevels_'+ CRAZYBIOGAME.topic);\n      crazybiolevels += (i < storage.length) ? parseInt(storage.slice(i,i+2),16) : 0;\n\n      console.log(crazybiolevels,CRAZYBIOGAME.level,CRAZYBIOGAME.game);\n\n      str = storage.padEnd(2 * CRAZYBIOGAME.level,'0');\n      let arr = str.split('');\n      arr[2*(CRAZYBIOGAME.level - 1)] = crazybiolevels.toString(16).padStart(2,'0')[0];\n      arr[2*(CRAZYBIOGAME.level - 1) + 1] = crazybiolevels.toString(16).padStart(2,'0')[1];\n      str = arr.join('');\n    }\n    else {\n      str = crazybiolevels.toString(16).padStart(2 * CRAZYBIOGAME.level,'0');\n    }\n    console.log('updated value',str);\n    localStorage.setItem('crazybiolevels_' + CRAZYBIOGAME.topic,str);\n\n\n    let html = (CRAZYBIOGAME.next_game !== '9999') ?\n      `<p>Click on this <a class=\"exit\" href=\"../${CRAZYBIOGAME.next_game}\">button</a>to go to the next game...</p>` :\n      `<p>End of this level !!! Return to <a class=\"exit\" href=\"../index.html#level${CRAZYBIOGAME.level+1}\">Home</a>...</p>`;\n    displayPopup( {\n      header: 'Congratulations !!!',\n      body: [html],\n      footer:  'You Win !!&nbsp;&nbsp;'\n    });\n  }\n  else {\n    alert(\"Wrong code. Try again\");\n  }\n}\n\n\n\n\n//# sourceURL=webpack:///./src/core/common.js?");

/***/ }),

/***/ "./src/core/composite.js":
/*!*******************************!*\
  !*** ./src/core/composite.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n/**\n * Create a new scene\n *\n * @author Jean-Christophe Taveau\n */\nclass Composite extends Node {\n\n  constructor(id,className,description) {\n    super(id,className,description);\n  };\n  \n  static create(props) {\n    return new Composite(props.id,props.class,props.description)\n      .append('article')\n      .display(props.display)\n      .children(props.childNodes) // Pre-calculated in `preprocess` of game.js\n      .forEachChild(this.appendChild);\n  }\n\n  appendChild(child) {\n    console.log('appendChild ',child);\n    if (func !== undefined) {\n      if (child.class === 'item') {\n        CRAZYBIOGAME.graph.inventory.appenChild(child);\n      }\n      else {\n        this.element.appendChild(child);\n        if (child.class === 'composite' || child.class === 'scene' || child.class === 'scene.closeup') {\n          child.forEachChild(child.appendChild);\n        }\n      }\n    }\n  }\n  \n  traverse(func) {\n    this.childNodes.forEach ( (child) => func(this,child));\n  }\n}\n\n\nconst createComposite = (props) => {\n  let composite = Composite.create(props);\n  return composite.element;\n};\n\n/**\n * Create a new target\n *\n *\n\n \nconst createTarget = (node) => {\n  let element = document.createElement('div');\n  element.id = node.id;\n  element.className = 'target';\n  // TODO\n  if (node.display !== \"undefined\") {\n    if (node.display.path !== \"undefined\") {\n      let img = document.createElement('img');\n      img.src = node.display.graphics.path;\n      console.log(node.display.graphics.position);\n      element.appendChild(img);\n    }\n    element.style.display = (node.display.visibility) ? \"inline-block\" : \"none\";\n    // TODO need parent dimension\n    let parentWidth = node.display.parentWidth;\n    let parentHeight = node.display.parentHeight;\n    element.style.left = `${node.display.graphics.position[0]/parentWidth * 100 || 0}%`;\n    element.style.top = `${node.display.graphics.position[1]/parentHeight * 100 || 0}%`;\n    element.style.maxWidth = `${node.display.graphics.width/parentWidth * 100 || 0}%`;\n  }\n\n  \n  // TODO\n  \n  return element;\n};\n */\n\n\n//# sourceURL=webpack:///./src/core/composite.js?");

/***/ }),

/***/ "./src/core/events.js":
/*!****************************!*\
  !*** ./src/core/events.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n/**\n * Factory of action(s)\n *\n * @author Jean-Christophe Taveau\n */\nconst updateNodes = (eventType,node) => { \n  if (node.actions[eventType].new_nodes !== undefined) {\n    showNodes(node.actions[eventType].new_nodes);\n  }\n  if (node.actions[eventType].del_nodes !== undefined) {\n    hideNodes(node.actions[eventType].del_nodes);\n  }\n  if (node.actions[eventType].new_items !== undefined) {\n    showItems(node.actions[eventType].new_items);\n  }\n  if (node.actions[eventType].popup !== undefined) {\n    displayPopup(node.actions[eventType].popup);\n  }\n}\n\n/**\n * Factory of action(s)\n *\n * @author Jean-Christophe Taveau\n */\nconst triggerAction = (event,node) => {\n  console.log(event);\n  Object.keys(node.actions).forEach( (event) => {\n    switch(event) {\n    case 'onclick': \n      if (CRAZYBIOGAME.useItem) {\n        updateNodes('onuse',node);\n      }\n      else {\n        updateNodes('onclick',node);\n      }\n      break;\n    case 'onsuccess': \n      updateNodes('onsuccess',node);\n      break;\n    }\n  });\n}\n\n/**\n * Display/Show objects in the scene\n *\n * @param {array} nodelist - List of Objects\n * @author Jean-Christophe Taveau\n */\nconst showNodes = (nodelist) => {\n  nodelist.forEach( id => {\n    let node = CRAZYBIOGAME.graph.nodeList.filter( (n) => n.id === id)[0];\n    console.log(`show node #${id} ${node.element.className}`);\n    node.element.style.display = 'block';\n    if (node.actions !== undefined && node.actions.ondisplay !== undefined) {\n      updateNodes('ondisplay',node);\n    }\n\n  });\n}\n\n\n/**\n * Hide objects in the scene\n *\n * @param {array} nodelist - List of Objects\n * @author Jean-Christophe Taveau\n */\nconst hideNodes = (nodelist) => {\n  nodelist.forEach( id => {\n    let node = CRAZYBIOGAME.graph.nodeList.filter( (n) => n.id === id)[0];\n    node.element.style.display = 'none';\n  })\n}\n\n/**\n * Create a popup\n *\n * @author Charlotte GONCALVES FRASCO\n * @author Hans SCHRIEKE\n * @author Penelope WINTRINGER\n * @author Jean-Christophe Taveau\n */\nconst displayPopup = (props) => {\n\n  let modal = document.getElementById('popup');\n  modal.style.display = 'block';\n  \n  // modal-content\n  let modalContent = document.querySelector('.modal-content') || document.createElement('div');\n  modalContent.className = 'modal-content';\n  \n  let closeButton = document.createElement('a')\n  closeButton.href=\"#close\";\n  closeButton.title=\"Close\";\n  closeButton.className =\"close\";\n  closeButton.textContent='×';\n  closeButton.addEventListener('click', (e) => {\n    modal.style.display = 'none';\n    e.stopPropagation();\n  }, false);\n  modalContent.appendChild(closeButton);\n\n  // modal-header ** MANDATORY **\n  let modalHeader = document.querySelector('.modal-header') || document.createElement('div');\n  modalHeader.className = 'modal-header';\n  modalHeader.textContent = props.header;\n  modalContent.appendChild(modalHeader);\n\n\n  // modal-body\n  let modalBody = document.querySelector('.modal-body') || document.createElement('div');\n  modalBody.className = 'modal-body';\n  while (modalBody.lastChild) {\n    modalBody.removeChild(modalBody.lastChild);\n  }\n  if (props.contentDOM === undefined) {\n    modalBody.innerHTML = (props.body !== undefined) ? props.body.join('') : '';\n  }\n  else {\n    modalBody.appendChild(props.contentDOM);\n  }\n  modalContent.appendChild(modalBody);\n\n\n  // modal-footer\n  let modalFooter = document.querySelector('.modal-footer') || document.createElement('div');\n  modalFooter.className = 'modal-footer';\n  modalFooter.innerHTML = props.footer || '';\n  modalContent.appendChild(modalFooter);\n\n\n\n  modal.appendChild(modalContent);\n  \n  \n/*\n  // TODO For each button, add it :\n  // Example:\n  // <span class=\"grab\"><i class=\"far fa-hand-paper fa-2x\"></i></span>\n\n  if (props.class === \"machine.download\"){\n    let dwnldButton = document.createElement('a');\n    dwnldButton.className = 'download-button';\n    dwnldButton.href = 'javascript:void(0)';\n    dwnldButton.innerHTML = '<i class=\"fas fa-download fa-2x\"></i>';\n    modalFooter.appendChild(dwnldButton);\n  }\n  \n  else if (props.class === \"machine.display\"){\n    let img = document.createElement('img');\n    img.className = 'image';\n    img.src = props.features.popup.graphics.path;\n    modalBody.appendChild(img);\n  }\n  \n  else if (props.class === \"machine.form\"){\n    //to debug\n\n    let myForm = document.createElement('form');\n    myForm.onsubmit = validateForm();\n    myForm.method = \"post\";\n    let field = document.getElementsById(\"f1\");\n    field.type = \"text\";\n    let field2 = document.getElementsById(\"f2\");\n    field2.type = \"text\";\n    let buttonS = document.createElement('button');\n    buttonS.textContent = 'OK';\n    buttonS.type = \"submit\";\n\n    myForm.appendChild(field);\n    myForm.appendChild(field2);\n    myForm.appendChild(buttonS);\n\n    let holder = \"...\";\n    let answer = `${props.exit}`;\n    field.placeholder = holder;\n    field2.placeholder = holder;\n\n    function validateForm() {\n      let x = document.forms[\"myForm\"][\"field\"].value;\n      let y =  document.forms[\"myForm\"][\"field2\"].value;\n      if (x == \"\" || y == \"\") {\n          alert(\"All fields must be filled out.\");\n          return false;\n      }\n      if (x === answer && y === answer){\n        alert(`${props.message}`);\n      }\n      else {\n        alert(\"Try again\");\n      }\n    }\n\n    modalBody.appendChild(myForm);\n\n  }\n  \n  else if (props.class === \"machine.formDragDrop\"){\n    //prototype in machine.JS to c/p and modify\n  }\n  \n  else if (props.class === \"machine.formDropDown\"){\n    //prototype in machine.JS to c/p and modify\n  }\n\n\n  else if (props.class === \"machine.lockNumerical\"){\n    let imglockNum = document.createElement('img');\n    imglockNum.className = 'lock-image';\n    imglockNum.src =  props.features.file;\n    modalBody.appendChild(imglockNum);\n    let lockNum = document.createElement('a');\n    lockNum.className = 'lockNum-button';\n    lockNum.href = 'javascript:void(0)';\n    lockNum.innerHTML = '<i class=\"fas fa-unlock-alt\"></i>';\n    modalFooter.appendChild(lockNum);\n\n  }\n\n  else if (props.class === \"machine.lockText\"){\n    // create the input\n    let form = document.createElement('form');\n    let submit = document.createElement('submit');\n    let div = document.createElement('div');\n    let input = document.createElement('input');\n    input.id = 'lock-input';\n    input.type = 'text';\n\n    div.appendChild(input);\n    div.appendChild(submit);\n    form.appendChild(div);\n\n    // setup the holder\n    let holder = \"\";\n    let answer = `${props.exit}`;\n    if (!isNaN(answer) === true){\n      holder = 'Input numbers';\n    }\n    else {\n      holder = 'Input letters';\n    }\n    input.placeholder = holder;\n\n    let submitbutton = document.createElement('button');\n    submitbutton.id = 'button';\n    submitbutton.textContent = \"OK\";\n    submitbutton.type = \"submit\";\n\n    submitbutton.onclick = function(){\n      let val = document.getElementById('lock-input').value;\n      if (val === `${props.exit}`){\n        alert(`${props.message}`);\n      }\n      else {\n        alert(\"Try again\");\n      }\n    }\n\n    modalBody.appendChild(form);\n    submit.appendChild(submitbutton);\n\n    let lockText = document.createElement('a');\n    lockText.className = 'lockText-button';\n    lockText.href = 'javascript:void(0)';\n    modalFooter.appendChild(lockText);\n\n\n}\n\n\n\n  let link = document.createElement('a');\n  link.className = 'close'+ name;\n  link.href = 'javascript:void(0)';\n  link.innerHTML = '<i class=\"far fa-window-close fa-2x\"></i>';\n  modalFooter.appendChild(link);\n\n\n\n let root = document.getElementById('game');\n root.appendChild(modal);\n */\n}\n\n\n//# sourceURL=webpack:///./src/core/events.js?");

/***/ }),

/***/ "./src/core/game.js":
/*!**************************!*\
  !*** ./src/core/game.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n\nconst creators = {\n  \"composite\": createComposite,\n  \"deferred\": createDeferred,\n  \"item\": createItem,\n  \"machine\": createMachine,\n  \"machine.download\": createMachineDownload,\n  \"machine.form\": createForm,\n  \"machine.formDragDrop\": createFormDragDrop,\n  \"machine.formDropDown\": createFormDropDown,\n  \"machine.tile\": createMachineTile,\n  \"machine.lockKeypad\": createLockKeypad,\n  \"machine.lockDigit[1]\": createLockDigit(1),\n  \"machine.lockDigit[2]\": createLockDigit(2),\n  \"machine.lockDigit[3]\": createLockDigit(3),\n  \"machine.lockDigit[4]\": createLockDigit(4),\n  \"machine.lockDigit[5]\": createLockDigit(5),\n  \"machine.lockDigit[6]\": createLockDigit(6),\n  \"machine.lockDigit[7]\": createLockDigit(7),\n  \"machine.lockDigit[8]\": createLockDigit(8),\n  \"machine.lockDigit[9]\": createLockDigit(9),\n  \"machine.lockText\": createLockText,\n  \"machine.lockNumerical\":  createLockNumerical,\n  \"scene\": createScene,\n  \"sprite\": createSprite\n\n};\n\n/**\n * Create a new game from a JSON storyboard\n *\n * @author: Jean-Christophe Taveau\n */\nconst newGame = (filename) => {\n  /*\n   * Parse storyboard and create various HTML5 Elements\n   */\n  const parseGraph = (storyboard) => {\n  \n    const hasItems = () => {\n      return storyboard.some( (obj) => obj.class === 'item');\n    }\n    \n    // Process storyboard\n    const process = (storyboard) => {\n      let graph = new Graph();\n      graph.nodeList = storyboard.map( (obj, index, arr) => {\n        console.log(obj);\n        let func = creators[obj.class];\n        if (func !== undefined) {\n          return func(obj);\n        }\n        return {};\n      });\n      console.log('nodeList');\n      console.log(graph.nodeList);\n\n      graph.root = graph.nodeList.filter( (node) => node.className === 'scene' && node.id === 1)[0];\n      graph.traverseFrom(graph.root);\n      \n      return graph;\n    };\n\n    const appendHTML = (node) => {\n      if (node.className === 'item') {\n        document.querySelector('aside ul').appendChild(node.getHTML());\n      }\n      else {\n        node.ancestor.getHTML().appendChild(node.getHTML());\n      }\n\n    }\n    \n    /**** M  a  i  n ****/\n\n    // Step #0- Get Width and Height of game\n    let root_obj = storyboard.filter ( obj => obj.id === 1 && obj.class === 'scene')[0];\n    let root = document.getElementById('game');\n    CRAZYBIOGAME.width = root_obj.display.width;\n    CRAZYBIOGAME.height = root_obj.display.height;\n     \n    // Step #1- Preprocess\n    if (hasItems()) {\n      let inventory = document.createElement('aside');\n      inventory.appendChild(document.createElement('ul'));\n      root.prepend(inventory);\n      console.log('create inventory');\n      // Complete the `new_nodes` property if any\n      // Collect all the ids and the items ids\n      let sprites = storyboard.filter(obj => obj.id !== 0 && obj.class !== 'item');\n      let modifiers = storyboard.filter( obj => obj.class === 'item').map( item => item.id);\n      modifiers.forEach( modifier => {\n        for (let sprite of sprites) {\n          let new_nodeid = sprite.id + modifier;\n          let new_nodes = sprites.filter( obj => obj.id === new_nodeid);\n          if (new_nodes.length !== 0) {\n            console.log(sprite);\n            console.log(new_nodes);\n            // When a item is used, trigger the `onuse` action(s)\n            sprite.action.onuse = {\n              new_nodes: new_nodes.map( node => node.id),\n              modifier: modifier\n            }\n          }\n        }\n      });\n      console.log(sprites);\n      console.log(modifiers);\n    }\n    console.log(storyboard);\n    \n    // Step #2 - Create the graph and nodes\n    CRAZYBIOGAME.graph = process(storyboard);\n\n    // Step #3 - Post-process - create Accessory Elements (popup, etc.)\n    root.appendChild(CRAZYBIOGAME.graph.root.getHTML());\n    let popup = document.createElement('div');\n    popup.className = \"modal\";\n    popup.id = 'popup';\n    root.appendChild(popup);\n\n    // Step #4 - Finalize HTML5 and/or SVG Elements of this graph\n    let scene_root = CRAZYBIOGAME.graph.root;\n    root.style.maxWidth = `${CRAZYBIOGAME.width}px`;\n    CRAZYBIOGAME.graph.traverse(scene_root,appendHTML);\n  };\n  \n  /*\n   * Get JSON with fetch(..)\n   */\n  const getJSON = (url) => {\n    return fetch(url, {\n      method: 'GET',\n      headers: new Headers({'Content-Type': 'application/json'}),\n      mode: 'cors',\n      cache: 'default' \n      }\n    )\n    .then ( response => response.json() )\n    .catch ( error => {\n      alert(`Something went wrong - ${error}`) \n    })\n  };\n  \n   \n  // Main\n  \n  return getJSON(filename)\n    .then( (data) => parseGraph(data) );\n}\n\n\n//# sourceURL=webpack:///./src/core/game.js?");

/***/ }),

/***/ "./src/core/graph.js":
/*!***************************!*\
  !*** ./src/core/graph.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\nclass Graph {\n  constructor() {\n    this.root;\n    this.nodeList = [];\n  }\n\n\n  traverseFrom(a_node) {\n    let children;\n    let ancestor;\n    if (a_node.hasChildren()) {\n      // ???\n      if (a_node.childrenID !== undefined) {\n        children = a_node.childrenID;\n        ancestor = a_node;\n      }\n      else {\n        console.log('Check if new_nodes in ' + a_node.id);\n        Object.keys(a_node.actions).forEach( on_event => {\n          if (a_node.actions[on_event].new_nodes !== undefined) {\n            children = a_node.actions[on_event].new_nodes;\n            ancestor = a_node.ancestor;\n            console.log(`actions.then... id ${a_node.id} ${a_node.ancestor.id}`);\n          }\n        });\n      }\n    }\n    else {\n      return;\n    }\n\n    for (let id of children) {\n      console.log(`id ${id} ${ancestor.id}`);\n      let nodeChild = this.nodeList.filter( (node) => node.id === id)[0];\n      ancestor.childNodes.push(nodeChild);\n      nodeChild.ancestor = ancestor;\n      this.traverseFrom(nodeChild);\n    }\n  }\n\n\n  traverse(a_node,func) {\n    if (a_node.hasChildNodes()) {\n      for (let nodeChild of a_node.childNodes) {\n        func(nodeChild);\n        this.traverse(nodeChild);\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/core/graph.js?");

/***/ }),

/***/ "./src/core/item.js":
/*!**************************!*\
  !*** ./src/core/item.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n/**\n * Create a new item\n *\n *\n */\nclass Item extends Machine {\n\n  constructor (id,className,description) {\n    super(id,className,description);\n  }\n\n  static create(props) {\n    props.display.id = props.id;\n    props.display.title = props.description;\n    \n    let item = new Item(props.id,props.class,props.description,props.parent)\n      .display(props.display)\n      .features(props.features);\n\n    return item;\n  }\n\n  display(displayProps) {\n    if (displayProps === undefined) {\n      return this;\n    }\n    // Add image in `inventory`\n    this.element = document.createElement('li');\n    this.element.id = `item_${displayProps.id}`;\n    this.element.style.display = 'none';\n    this.element.className = 'item';\n    let link = document.createElement('a');\n    link.href = 'javascript:void(0)';\n    link.title = displayProps.title;\n    let media = document.createElement('img');\n    media.src = displayProps.graphics.path;\n    link.appendChild(media);\n    this.element.appendChild(link);\n    document.querySelector('aside ul').appendChild(this.element);\n    return this;\n    \n  }\n  \n  features(featuresProps) {\n    // Add event\n    let link = this.element.children[0];\n    link.addEventListener('click', (ev) => {\n      if (link.className.includes('checked')) {\n        link.className = 'item';\n        document.querySelector('section').style.cursor = 'auto';\n        document.querySelectorAll('.sprite a').forEach( el => el.style.cursor = `pointer`);\n        CRAZYBIOGAME.useItem = false;\n      }\n      else {\n        link.className = ' item checked';\n        document.querySelector('section').style.cursor = `url(${featuresProps.thumbnail}),grab`;\n        document.querySelectorAll('.sprite a').forEach( el => el.style.cursor = `url(${featuresProps.thumbnail}),pointer`);\n        CRAZYBIOGAME.useItem = true;\n      }\n    });\n    return this;\n    \n  }\n  \n}\n\nconst createItem = (props) => {\n  let item = Item.create(props);\n  \n  return item;\n};\n\n\n//# sourceURL=webpack:///./src/core/item.js?");

/***/ }),

/***/ "./src/core/lock.js":
/*!**************************!*\
  !*** ./src/core/lock.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\nclass Lock extends Machine {\n\n  constructor (id,className,description) {\n    super(id,className,description);\n  }\n  \n  static create(props) {\n    return new Lock(props.id,props.class,props.description,props.parent)\n      .append('article')\n      .display(props.display)\n      .draggable(props.features.draggable)\n      .exit(props.features.exit);\n  }\n}\n\n\n/**\n * Lock displayed as a Text Field\n *\n * @author Charlotte GONCALVES FRASCO\n * @author Hans SCHRIEKE\n * @author Jean-Christophe Taveau\n */\nconst createLockText = (props) => {\n\n  let lock = Lock.create(props);\n  lock.element.className = \"machine locktext\";\n\n  let actionProps = {}\n  actionProps.onclick = {};\n  actionProps.onclick['popup'] = {\n    header: 'Unlock the game...',\n    body: [`Type the code... to unlock the game<br>@${this.exitCode}@__ok__ <br>` ],\n    footer: 'Lock&nbsp;'\n  };\n  \n  // create the popup content + events\n  let container = document.createElement('div');\n  container.id = 'lock-container';\n  let paragraph = document.createElement('p'); paragraph.appendChild(document.createTextNode('Type the code... to unlock the game'));\n  let input = document.createElement('input');\n  input.id = 'lock-input';\n  input.type = 'text';\n  input.placeholder = 'Type the code';\n\n  let submitbutton = document.createElement('button');\n  submitbutton.id = 'button';\n  submitbutton.textContent = \"OK\";\n  submitbutton.type = \"submit\";\n\n  submitbutton.onclick = () => {\n    let val = document.getElementById('lock-input').value;\n    console.log(val,lock.exitCode);\n    nextGame(val,lock);\n  }\n  \n  // Add all the elements\n  container.appendChild(paragraph);\n  container.appendChild(input);\n  container.appendChild(submitbutton);\n  actionProps.onclick.popup.contentDOM = container;\n  lock.action(actionProps);\n  \n  return lock;\n};\n\n/**\n * Lock displayed as a Numerical Field\n * @author \n */\nconst createLockNumerical = (props) => {\n// TODO Add numerical checking onchange event\n  return createLockText(props);\n};\n\n\n/**\n * Lock displayed as a n-Digit Lock\n */\nconst createLockDigit = (nDigits) => (props) => {\n  let element = document.createElement('div');\n  element.id = props.id;\n  element.className = \"lockDigit\";\n\n  // TODO\n\n  return element;\n};\n\n/**\n * Lock displayed as a keypad\n */\nconst createLockKeypad = (props) => {\n  let element = document.createElement('div');\n  element.id = props.id;\n  element.className = \"lockKeypad\";\n\n  // TODO\n\n  return element;\n};\n\n/**\n * Lock displayed as a numpad\n * @author P. Wintringer\n *\nconst createLockNumpad = (props) => {\n  let form = document.createElement('form');\n  let element = document.createElement('div');\n  element.id = props.id;\n  element.className = \"lockNumpad\";\n  //let evt = document.createEvent(\"MouseEvents\");\n  //evt.initMouseEvent(\"click\");\n  let text = document.getElementById(\"textfield\");\n  let table = document.createElement('table');\n  let button1 = document.createElement('input')\n  button1.setAttribute('type','button');\n  button1.setAttribute('value',1);\n  button1.onClick = AddValueToTextField(value);\n  table.appendChild(button1);\n  let button2 = document.createElement('input');\n  button2.setAttribute('type','button');\n  button2.setAttribute('value',2);\n  button2.onClick = AddValueToTextField(value);\n  table.appendChild(button2);\n  let button3 = document.createElement('input');\n  button3.setAttribute('type','button');\n  button3.setAttribute('value',3);\n  button3.onClick = AddValueToTextField(value);\n  table.appendChild(button3);\n  let button4 = document.createElement('input');\n  button4.setAttribute('type','button');\n  button4.setAttribute('value',4);\n  button4.onClick = AddValueToTextField(value);\n  table.appendChild(button4);\n  let button5 = document.createElement('input');\n  button5.setAttribute('type','button');\n  button5.setAttribute('value',5);\n  button5.onClick = AddValueToTextField(value);\n  table.appendChild(button5);\n  let button6 = document.createElement('input');\n  button6.setAttribute('type','button');\n  button6.setAttribute('value',6);\n  button6.onClick = AddValueToTextField(value);\n  table.appendChild(button6);\n  let button7 = document.createElement('input');\n  button7.setAttribute('type','button');\n  button7.setAttribute('value',7);\n  button7.onClick = AddValueToTextField(value);\n  table.appendChild(button7);\n  let button8 = document.createElement('input');\n  button8.setAttribute('type','button');\n  button8.setAttribute('value',8);\n  button8.onClick = AddValueToTextField(value);\n  table.appendChild(button8);\n  let button9 = document.createElement('input');\n  button9.setAttribute('type','button');\n  button9.setAttribute('value',9);\n  button9.onClick = AddValueToTextField(value);\n  table.appendChild(button9);\n  let buttonC = document.createElement('input');\n  buttonC.setAttribute('type','button');\n  buttonC.setAttribute('value','C');\n  buttonC.onClick = SupprValueInTextField();\n  table.appendChild(buttonC);\n  let button0 = document.createElement('input');\n  button0.setAttribute('type','button');\n  button0.setAttribute('value', 0);\n  button0.onClick = AddValueToTextField(value);\n  table.appendChild(button0);\n  let buttonV = document.createElement('input');\n  buttonV.setAttribute('value','V');\n  buttonV.type = \"submit\";\n  table.appendChild(buttonV);\n\n  function AddValueToTextField(val)\n    {document.getElementByID(text).value += val;}\n\n  function SupprValueInTextField()\n    {document.getElementByID(text).value -= 1;}\n\n  return element;\n};\n*/\n\n\n//# sourceURL=webpack:///./src/core/lock.js?");

/***/ }),

/***/ "./src/core/machine.js":
/*!*****************************!*\
  !*** ./src/core/machine.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n\nclass Machine extends Node {\n\n  constructor (id,className,description) {\n    super(id,className,description);\n    // Specific of `machine`\n    this.features = {};\n  }\n  \n  /**\n   * Static Constructor\n   *\n   */\n  static create(props) {\n    return new Machine(props.id,props.class,props.description,props.parent)\n      .append('article')\n      .display(props.display)\n      .draggable(props.features.draggable)\n      .exit(props.features.exit);\n  }\n\n  /**\n   * Features - Properties specific of the `machine`\n   *\n   * @author Jean-Christophe Taveau\n\n  features(featuresProps) {\n    // Various methods of machines\n    let f = {exit: this.exit};\n    Object.keys(featuresProps).forEach( (feat) => {\n      f[feat].call(this,featuresProps[feat]);\n    });\n    return this;\n  }\n*/\n\n  /**\n   * exit - Properties specific of the `machine`\n   *\n   * @author Jean-Christophe Taveau\n   */\n  exit(value) {\n    if (value === undefined) {\n      return this;\n    }\n    console.log('exit code ' + value.slice(9));\n    this.exitCode = (value.toString().includes('deferred')) ? CRAZYBIOGAME.deferred[value.slice(9)] : value;\n\n    return this;\n  }\n  \n  /**\n   * Click and Drag Feature \n   *\n   * @author Jean-Christophe Taveau\n   */\n  draggable(flag = false) {\n    \n    const dragstart = (event) => {\n      // centers the tile at (pageX, pageY) coordinates\n      const moveAt = (pageX, pageY) => {\n        // console.log(orgX,orgY,pageX,pageY,dx,dy,' = ',pageX - orgX + dx,pageY - orgY + dy);\n        dragged.style.left = pageX - orgX  + dx + 'px';\n        dragged.style.top = pageY - orgY + dy + 'px';\n      }\n\n      const drag_over = (event) => {\n        moveAt(event.pageX, event.pageY);\n        event.preventDefault();\n        return false;\n      }\n      \n      const drag_end = (event) => {\n        event.target.parentNode.style.zIndex = 1;\n        document.querySelector('main').removeEventListener('mousemove', drag_over,false);\n        dragged.removeEventListener('mouseup', drag_end,false);\n      }\n      \n      // Main of `dragstart`\n      let dragged = event.target.parentNode;\n      \n      let orgX = event.pageX;\n      let orgY = event.pageY;\n      // TODO Must be improved - All the parents up to `game`\n      let dx = dragged.getBoundingClientRect().left - document.getElementById('game').getBoundingClientRect().left;\n      let dy = dragged.getBoundingClientRect().top - document.getElementById('game').getBoundingClientRect().top;\n      dragged.style.zIndex = 1000;\n\n      moveAt(event.pageX, event.pageY);\n\n      // Move the tile on mousemove\n      document.querySelector('main').addEventListener('mousemove', drag_over);\n\n      // Drop the tile, remove unneeded handlers\n      document.querySelector('main').addEventListener('mouseup', drag_end);\n    };\n\n    // M A I N\n    if (!flag) {\n      return this;\n    }\n    \n    this.element.draggable = false;\n    this.element.className += ' movable';\n    this.element.addEventListener('mousedown', dragstart,false); \n    this.element.addEventListener('dragstart', (e) => {e.preventDefault();return false},false); \n    this.element.addEventListener('dragover', (e) => {return false},false); \n    this.element.addEventListener('drop', (e) => false,false); \n\n    return this;\n  }\n} // End of class Machine\n\n\n/**\n * Create a new generic machine\n * @author Hans SCHRIEKE\n *\n */\nconst createMachine = (props) => {\n  let machine = Machine.create(props)\n    .action(props.action)\n    .features(props.features);\n    \n  return machine;\n};\n\n\nconst svg2img = (svgString,format,width,height,container) => {\n\n  console.log(svgString);\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  let ctx = canvas.getContext(\"2d\");\n  let DOMURL = window.URL || window.webkitURL;\n  let img = new Image();\n  let blob = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\n  let url = DOMURL.createObjectURL(blob);\n  img.onload = function() {\n      ctx.drawImage(img, 0, 0);\n      var png = canvas.toDataURL(`image/${format}`);\n      container.innerHTML = `\n        <p>\n          Click on the icon below to download the file and process \n          it with your favorite scientific software...<br>\n          <center> \n            <a class=\"button\" href=\"${png}\" download=\"${CRAZYBIOGAME.gamepath}_image.${format}\")/>\n              <i class=\"fas fa-download fa-3x\"></i>\n            </a>\n          </center>\n        </p>`;\n      DOMURL.revokeObjectURL(png);\n  };\n  img.src = url;\n}\n\n\n/**\n * Create a new `download` machine\n *\n * @author Hans SCHRIEKE \n * @author Charlotte GONCALVES FRASCO\n *\n */\nconst createMachineDownload = (props) => {\n\n  let machine = Machine.create(props);\n  \n  let element = machine.element;\n  element.className = \"machine download\";\n  \n  let actionProps = {}\n  actionProps.onclick = {};\n  actionProps.onclick['popup'] = {\n    header: 'Download...',\n    body: [''],\n    footer: 'Download '\n  };\n  \n  // create the 'form'\n  let container = document.createElement('div');\n  container.id = 'lock-container';\n\n  \n  if (props.features.download.includes('deferred')) {\n    let [result,format] = /:svg2(\\w+):/.exec(props.features.download);\n    console.log(result,result.index,result.length,format);\n    let index = props.features.download.indexOf(result) + result.length;\n    let svg = props.features.download.slice(index);\n    let w = parseInt(/width=\\s*\\s*\\\"(\\d+)/g.exec(svg)[1]);\n    let h = parseInt(/height\\s*=\\s*\\\"(\\d+)/.exec(svg)[1]);\n    svg2img(svg,format,w,h,container);\n  }\n  else {\n    let paragraph = document.createElement('p');\n    paragraph.innerHTML = \n      `Click on the icon below to download the file and process \n      it with your favorite scientific software...<br>\n      <center> <a class=\"button\" href=\"${props.features.download}\" download=\"${props.features.download}\">\n      <i class=\"fas fa-download fa-3x\"></i></a></center>`;\n    // Add all the elements\n    container.appendChild(paragraph);\n  }\n\n  actionProps.onclick.popup.contentDOM = container;\n  machine.action(actionProps);\n\n  return machine;\n};\n\n\n/**\n * Create a Tile machine\n *\n * @author Jean-Christophe Taveau\n *\n */\nconst createMachineTile = (props) => {\n  if (props.features === undefined) {\n    props.features = {draggable: true};\n  }\n  let machine = Machine.create(props);\n  machine.element.className = \"machine tile\";\n  return machine;\n};\n\n\n\n\n//# sourceURL=webpack:///./src/core/machine.js?");

/***/ }),

/***/ "./src/core/node.js":
/*!**************************!*\
  !*** ./src/core/node.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n\n/**\n * Class Node - Ancestor of all the other classes\n *\n * @author Jean-Christophe Taveau\n */\nclass Node {\n  /**\n   * @constructor\n   */\n  constructor(id,className,description) {\n    this.id = id;\n    this.className = className;\n    this.description = description;\n    this.element; // HTML5\n    this.displayType = Node.NONE;\n  }\n  \n  static get NONE() {\n    return 0;\n  }\n  \n  static get GRAPHICS() {\n    return 1;\n  }\n  \n  static get TEXT() {\n    return 2;\n  }\n  \n  static get TARGET()  {\n    return 3;\n  }\n  \n  /**\n   * Create a new node\n   */\n  static create(id,className,description) {\n    return new Node(id,className,description);\n  }\n\n  /**\n   * Set parent node\n   *\n   * @param {number} parent - Parent Node ID\n   *\n   * @author Jean-Christophe Taveau\n   */\n  setParent(parent) {\n    this.parent = parent;\n  }\n  \n  /**\n   * Create HTML5 element\n   */\n  append(htmlTag) {\n    // Append the media\n    this.element = document.createElement(htmlTag);\n    this.element.id = `node_${this.id}`;\n    this.element.className = this.className;\n    \n    return this;\n  }\n  \n  /**\n   * Get HTML Element\n   * \n   * @return {object} HTML Element\n   * @author Jean-Christophe Taveau\n   */\n  getHTML() {\n    return this.element;\n  }\n  \n  \n  /**\n   * Create display features\n   */\n  display(displayProps) {\n      \n    // M A I N\n    if (displayProps === undefined) {\n      alert(`The object #${this.id} must have a 'display' property`);\n      return this;\n    }\n    \n    this.width = displayProps.width || 0;\n    this.height = displayProps.height || 0;\n    this.topleft = displayProps.position || [0,0];\n      \n    this.element.style.left = `${this.topleft[0] / CRAZYBIOGAME.width * 100}%`;\n    this.element.style.top = `${this.topleft[1] / CRAZYBIOGAME.height * 100}%`;\n    this.element.style.width = `${this.width / CRAZYBIOGAME.width * 100}%`;\n    this.element.style.height = (displayProps.target === undefined) ? 'auto' : `${this.height / CRAZYBIOGAME.height * 100}%`;\n\n    // Media: Image, video, audio?, etc.\n    if (displayProps.graphics !== undefined) {\n      this.displayGraphics(displayProps.graphics);\n    }\n    // Text\n    else if (displayProps.text !== undefined) {\n      this.displayText(displayProps.text);\n    }\n    // Target to event(s)\n    else if (displayProps.target !== undefined) {\n      this.displayType = Node.TARGET;\n      this.target = (displayProps.target.data === undefined) ? [\"R\",0,0,this.width,this.height] : displayProps.target.data;\n    }\n    console.log(this.width,this.height,this.element.style.width,this.element.style.height,this.topleft,CRAZYBIOGAME.width,CRAZYBIOGAME.height);\n    \n    return this;\n  }\n\n  displayGraphics(propsGraphics) {\n    this.displayType = Node.GRAPHICS;\n    \n    // Append the media\n    if (propsGraphics.element !== undefined) {\n      // WARNING - DOES NOT WORK WITH JSON STORYBOARD!!!\n      this.element.appendChild(propsGraphics.element);\n    }\n    else {\n      // TODO\n      // Check extension and create the appropriate HTML5 element\n      let img = document.createElement('img');\n      img.src = propsGraphics.path;\n      img.addEventListener('dragstart', () => false,false); \n      this.element.appendChild(img); \n    }\n\n    \n    // Add focus if any\n    this.focus = (propsGraphics.focus !== undefined) ? propsGraphics.focus : [\"R\",0,0,this.width,this.height];\n    // Add style if any\n    return this.displayStyle(this.element,propsGraphics.style);\n  }\n\n  static getTargetElement(parent) {\n    let found;\n    if (parent.classList.contains('target')) {\n      return parent;\n    }\n    for (let child of parent.children) {\n      found = Node.getTargetElement(child);\n    }\n    return found;\n  }\n    \n  displayText(propsText) {\n    this.displayType = Node.TEXT;\n    this.element.style.width = 'auto';\n    this.element.style.height = 'auto';\n    this.element.innerHTML = propsText.content.join('');\n    // TODO Must be improved\n    let foundTarget = Node.getTargetElement(this.element);\n    if (foundTarget !== undefined) {\n      foundTarget.dataset.objectid = this.id;\n    }\n    return this.displayStyle(this.element,propsText.style);\n  };\n\n  displayStyle(element,props = {}) {\n    let reserved = ['a', 'span'];\n    let reservedCrazy = ['form','header','body','footer'];\n    for (let key in props) {\n      if (reserved.includes(key)) {\n        Array.from(this.element.children)\n          .filter( el => el.tagName === key.toUpperCase() )\n          .forEach( child => this.displayStyle(child,props[key]) );\n      }\n      else if (reservedCrazy.includes(key)) {\n        // let child = document.querySelector(`${} ${key}`);\n        this.displayStyle(child,props[key]);\n      }\n      else {\n        element.style[key] = props[key];\n      }\n\n    }\n    return this;\n  }\n  \n  \n  /**\n   * Create event features\n   * \n   * @author Jean-Christophe Taveau\n   */\n  action(actionProps, func) {\n  \n    const doIt = (ev) => {\n      console.log(`Click with ${ev.button} on object ${ev.target.dataset.objectid} and update display of ???`);\n      let node = CRAZYBIOGAME.graph.nodeList.filter ( node => node.id === parseInt(ev.target.dataset.objectid) )[0];\n      // Trigger Action depending of Event in common.js\n      triggerAction(ev,node);\n    }\n    \n    let indexSVG = this.element.children.length;\n    \n    if (actionProps === undefined) {\n      return this;\n    }\n    \n    // Add the event to the parent scene  \n    // TODO\n    this.actions = actionProps;\n    this.geometry = {type: 'R', data: []};\n    this.geometry = (this.displayType === Node.GRAPHICS) ? {type: this.focus[0], data: this.focus.slice(1)} : this.geometry;\n    this.geometry = (this.displayType === Node.TARGET) ? {type: this.target[0], data: this.target.slice(1)}: this.geometry;\n    if (this.geometry.data.length === 0) {\n      switch (this.geometry.type) {\n      case 'R' : \n        this.geometry.data[0] = this.topleft[0];\n        this.geometry.data[1] = this.topleft[1];\n        this.geometry.data[2] = this.width;\n        this.geometry.data[3] = this.height;\n      }\n    }\n    // Update height\n    // this.element.style.height = `${this.height / CRAZYBIOGAME.height * 100}%`;\n\n    // Add event\n    Object.keys(actionProps).forEach( (event) => {\n      if (actionProps[event].new_nodes !== undefined) {\n        this.childNodes = [];\n      }\n      if (event === 'onclick') {\n        if (this.displayType !== Node.TEXT) {\n          this.element.appendChild(createSensitiveLayer(this.id, this.width, this.height, this.geometry));\n        }\n        // TODO Tricky <svg> => <g> => <a>\n        let action = func || doIt;\n        Node.getTargetElement(this.element).addEventListener('click', doIt,false);\n      }\n      else if (event === 'onchange') {\n        this.element.addEventListener('change', doIt,false);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Create specific features\n   * \n   * @author Jean-Christophe Taveau\n\n  features(featuresProps) {\n    // TODO\n    this.features = featuresProps;\n    return this;\n  }\n   */\n   \n   \n  /**\n   * Add children to composite/scene object\n   *\n   * @param {array} childrenProps - Array of object(s)\n   * \n   * @author Jean-Christophe Taveau\n   */\n  children(childrenProps) {\n    this.childrenID = childrenProps;\n    // TODO\n    return this;\n  }\n\n  /**\n   * Check if this object has children IDs\n   *\n   * @return {boolean} true or false\n   * \n   * @author Jean-Christophe Taveau\n   */\n  hasChildren() {\n    let flag = false;\n    flag = (this.childrenID === undefined) ? flag : true;\n    if (this.actions !== undefined) {\n      // TODO Object.keys(this.actions).some( (event) => this.actions[event].new_nodes !== undefined );\n      flag = Object.keys(this.actions).reduce( (flag,event) => (this.actions[event].new_nodes !== undefined) ? true : flag,false);\n    }\n    return flag;\n  }\n\n  /**\n   * Check if this object has children Nodes\n   *\n   * @return {boolean} true or false\n   * \n   * @author Jean-Christophe Taveau\n   */\n  hasChildNodes() {\n    return (this.childNodes !== undefined);\n  }\n  /**\n   * Create composite features\n   * @obsolete\n   *\n   * @author Jean-Christophe Taveau\n   */\n  forEachChild(func) {\n    this.childNodes.forEach( (child) => func(child));\n    // TODO\n    return this;\n  }\n\n}\n\n\n\n\n//# sourceURL=webpack:///./src/core/node.js?");

/***/ }),

/***/ "./src/core/scene.js":
/*!***************************!*\
  !*** ./src/core/scene.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n/**\n * Create a new scene\n *\n * @author Jean-Christophe Taveau\n */\nclass Scene extends Composite {\n  \n  constructor(id,className,description) {\n    super(id,className,description);\n  };\n  \n  static create(props) {\n    return new Scene(props.id,props.class,props.description)\n      .append('section')\n      .display(props.display)\n      .children(props.children); // Pre-calculated in `preprocess` of game.js\n      // .forEachChild(this.appendChild);\n  }\n  \n  appendChild(node) {\n    console.log(node);\n    let func = creators[child.class];\n    if (func !== undefined) {\n      this.element.appendChild(func(node));\n    }\n  }\n  \n  /**\n   * Create a SVG Layer for grabbing the event(s)\n   * @obsolete\n   * @author Charlotte GONCALVES FRASCO\n   */\n  addSensitiveLayer() {\n  \n    const createCircle = (cx,cy,radius) => {\n      let shape = document.createElementNS(NS,'circle');\n      shape.setAttributeNS(null,'cx',cx+radius);\n      shape.setAttributeNS(null,'cy',cy+radius);\n      shape.setAttributeNS(null,'r',radius);\n      shape.setAttributeNS(null,'opacity', '0.3');\n      shape.setAttributeNS(null, 'fill', '#FFFFFF');\n      return shape;\n    }\n\n    const createRectangle = (x,y,w,h) => {\n      let shape = document.createElementNS(NS,'rect');\n      shape.setAttributeNS(null,'x',x);\n      shape.setAttributeNS(null,'y',y);\n      shape.setAttributeNS(null,'width',w);\n      shape.setAttributeNS(null,'height',h);\n      shape.setAttributeNS(null,'opacity', '0.9');\n      shape.setAttributeNS(null, 'fill', '#F0F0F0');\n      return shape;\n    }\n\n    const createPolygon = (path) => {\n      let shape = document.createElementNS(NS,'polygon');\n      shape.setAttributeNS(null,'points',path);\n      return shape;\n    }\n    \n    const geometries = {'C': createCircle, 'R': createRectangle, 'P': createPolygon};\n    \n    // M a i n\n    const NS = 'http://www.w3.org/2000/svg';\n    \n    let div = document.createElement('div');\n    div.id = this.id;\n    div.className = 'touch_layer';\n    div.style.width = `${this.width}px`;\n    div.height = `${this.height}px`;\n    this.element.appendChild(div);\n    \n    let elementS = document.createElementNS(NS,'svg');\n    // TODO BUG\n    elementS.setAttributeNS(null, 'viewBox',`0 0 ${this.width} ${this.height}`);\n    elementS.setAttributeNS(null, 'class', 'map');\n    elementS.setAttributeNS(null,'width','100%');\n    elementS.setAttributeNS(null,'height','100%');\n    elementS.setAttributeNS(null,'preserveAspectRatio','xMinYMin meet');\n\n\n    // Define clickable areas if any\n    for (let child of this.childNodes){\n      let elementG = document.createElementNS(NS,'g');\n      elementG.setAttributeNS(null, 'class', 'hover_group');\n      elementG.setAttributeNS(null, 'opacity', '0');\n      elementG.setAttributeNS(null, 'id', `area_${child.id}`);\n\n      let elementA = document.createElementNS(NS,'a');\n      elementA.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', 'javascript:void(0)');\n      elementA.setAttributeNS(null, 'id',`svg_${child.id}`);\n      elementA.setAttributeNS(null, 'class', 'btn');\n\n      let shape;\n      console.log(child);\n      if (child.geometry !== undefined) {\n        shape = geometries[child.geometry.type](...child.geometry.data);\n        elementA.appendChild(shape);\n      }\n\n      elementG.appendChild(elementA);\n      elementS.appendChild(elementG);\n    }\n\n    div.appendChild(elementS);\n\n  }\n}\n\n\n/**\n * Create a new scene\n *\n * @author Charlotte GONCALVES FRASCO\n */\nconst createScene = (props) => {\n\n  let _scene = Scene.create(props);\n\n  _scene.childNodes = [];\n\n  console.log(_scene);\n  \n  return _scene;\n};\n\n\n//# sourceURL=webpack:///./src/core/scene.js?");

/***/ }),

/***/ "./src/core/sprite.js":
/*!****************************!*\
  !*** ./src/core/sprite.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n\n/**\n * Create a new `sprite` node\n *\n * @author Jean-Christophe Taveau\n */\nclass Sprite extends Node {\n \n  constructor (id,className,description) {\n    super(id,className,description);\n  }\n  \n  static create(props) {\n    return new Sprite(props.id,props.class,props.description,props.parent)\n      .append('figure')\n      .display(props.display)\n      .action(props.action);\n  }\n}\n \nconst createSprite = (props) => {\n  let sprite = Sprite.create(props);\n  return sprite;\n}\n\n\n/*const createSprite = (props) => {\n  let element = document.createElement('div');\n  element.id = props.id;\n  element.className = 'sprite';\n  element.style.display = (props.display !== \"undefined\" && props.display.visibility) ? \"inline-block\" : \"none\";\n  // TODO\n  let img = document.createElement('img');\n  img.src = props.display.graphics.path;\n  img.src = props.display.graphics.path;\n  element.style.left = `${props.display.graphics.position[0] || 0}px`;\n  element.style.top = `${props.display.graphics.position[1] || 0}px`;\n  element.appendChild(img);\n  \n  \n  return element;\n};*/\n\n\n/**\n * Create a new generic sprite\n *\n * @author Jean-Christophe Taveau, GONCALVES FRASCO Charlotte, SCHRIEKE Hans\n\nconst createSprite = (props) => {\n  let position = document.createElement('div');\n  position.className = \"position\";\n  position.style = \"position:relative;top=-480px;left:-344px\";\n  let element = document.createElement('div');\n  //element.draggable =\"true\";\n  element.id = props.id;\n  element.className = 'sprite';\n  element.style.display = (props.display !== \"undefined\" && props.display.visibility) ? \"inline-block\" : \"none\";\n  //element.style = \"height: 1px; width: 1px; top: 35px; left: 755px; background-color: rgb(255, 0, 0); color: rgb(255, 255, 255); z-index: 509\"\n  // TODO\n  let img = document.createElement('img');\n  img.src = props.display.graphics.path;\n  img.src = props.display.graphics.path;\n  element.style.left = `${props.display.graphics.position[0] || 0}px`;\n  element.style.top = `${props.display.graphics.position[1] || 0}px`;\n  //element.ondragstart=\"event.dataTransfer.setData('image/plain', 'Ce texte peut être glissé')\";\n  element.appendChild(img);\n  position.appendChild(element);\n  let pos = document.createElement('div');\n  pos.style = \"position:relative;top=-480px;left:-344px\";\n  let sprite = document.getElementsByClassName('position');\n  sprite.addEventListener(\"drag\",function(event){\n  },true);\n\n  return element;\n};\n*/\n\n\n\n\n//# sourceURL=webpack:///./src/core/sprite.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/node.js */ \"./src/core/node.js\");\n/* harmony import */ var _core_node_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_core_node_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _core_machine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/machine.js */ \"./src/core/machine.js\");\n/* harmony import */ var _core_machine_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_core_machine_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _core_lock_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/lock.js */ \"./src/core/lock.js\");\n/* harmony import */ var _core_lock_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_core_lock_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _core_item_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/item.js */ \"./src/core/item.js\");\n/* harmony import */ var _core_item_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_core_item_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _core_composite_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/composite.js */ \"./src/core/composite.js\");\n/* harmony import */ var _core_composite_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_core_composite_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _core_sprite_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/sprite.js */ \"./src/core/sprite.js\");\n/* harmony import */ var _core_sprite_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_core_sprite_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _core_scene_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/scene.js */ \"./src/core/scene.js\");\n/* harmony import */ var _core_scene_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_core_scene_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _core_graph_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core/graph.js */ \"./src/core/graph.js\");\n/* harmony import */ var _core_graph_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_core_graph_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _core_game_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./core/game.js */ \"./src/core/game.js\");\n/* harmony import */ var _core_game_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_core_game_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _core_events_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core/events.js */ \"./src/core/events.js\");\n/* harmony import */ var _core_events_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_core_events_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _core_common_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/common.js */ \"./src/core/common.js\");\n/* harmony import */ var _core_common_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_core_common_js__WEBPACK_IMPORTED_MODULE_10__);\n/*\n *  crazybioGame: CrazyBioComputing Game Engine\n *  Copyright (C) 2015-2018  Jean-Christophe Taveau.\n *\n *  This file is part of crazybioGame\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with crazybioGame.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * Authors:\n * Jean-Christophe Taveau\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });
});